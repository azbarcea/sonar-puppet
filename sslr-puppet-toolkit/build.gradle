buildscript {
	repositories { jcenter() }
	dependencies {
		classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
	}
}

apply plugin: 'java' // or 'groovy'. Must be explicitly applied
apply plugin: 'com.github.johnrengelman.shadow'

description = 'Puppet :: SSLR Toolkit'
dependencies {
	compile project(':puppet-squid')
	compile "org.sonarsource.sslr:sslr-toolkit:$sslrVersion"
	compile "ch.qos.logback:logback-classic:0.9.15"
}

shadowJar {
	classifier = ''
	manifest {
		attributes 'Main-Class': 'com.iadams.sonarqube.puppet.PuppetToolkit'
		dependencies {
			include(project(':puppet-squid'))
			include(dependency('org.codehaus.sonar.sslr:sslr-core'))
			include(dependency('org.codehaus.sonar.sslr:sslr-xpath'))
			include(dependency('org.codehaus.sonar.sslr-squid-bridge:sslr-squid-bridge'))
			include(dependency('jaxen:jaxen'))
			include(dependency('org.codehaus.sonar.sslr:sslr-toolkit'))
			include(dependency('org.codehaus.sonar:sonar-colorizer'))
			include(dependency('org.codehaus.sonar:sonar-channel'))
			include(dependency('org.slf4j:slf4j-api'))
			include(dependency('org.slf4j:jcl-over-slf4j'))
			include(dependency('ch.qos.logback:logback-classic'))
			include(dependency('ch.qos.logback:logback-core'))
			include(dependency('commons-io:commons-io'))
			include(dependency('commons-lang:commons-lang'))
			include(dependency('com.google.guava:guava'))
		}
	}
}

jar.finalizedBy shadowJar

pitest {
	targetClasses = ['com.iadams.sonarqube.puppet.*']
	threads = 4
	outputFormats = ['XML', 'HTML']
}